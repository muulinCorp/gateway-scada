openapi: 3.0.0
info:
  version: 1.0.0
  title: Early_Warning_Service
  description: 預警功能服務

paths:
  /v2/warning/setting:
    post:
      tags: [ews]
      summary: 建立預警
      operationId: create-warning-conf
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarning'
            examples:
              CorrectExample:
                $ref: '#/components/examples/CreateWarning'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: fb2c4869-5238-4ea5-994c-677666927ea1
                required:
                  - id
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    get:
      tags: [ews]
      summary: 取得預警設定列表
      operationId: get-warning-setting-list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarningSettingList'
              examples:
                CorrectExample:
                  $ref: '#/components/examples/GetWarningSettingList'
        '204':
          description: no content
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /v2/warning/setting/{ID}:
    get:
      tags: [ews]
      summary: 取得預警設定詳情
      operationId: get-warning-setting-detail
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarningSettingDetail'
              examples:
                CorrectExample:
                  $ref: '#/components/examples/GetWarningSettingDetail'
        '204':
          description: no content
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    put:
      tags: [ews]
      summary: 更新預警
      operationId: update-warning-setting
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarning'
            examples:
              CorrectExample:
                $ref: '#/components/examples/CreateWarning'
      responses:
        '200':
          description: success
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    delete:
      tags: [ews]
      summary: 刪除預警
      operationId: delete-warning-setting
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /v2/warning/setting/{ID}/enable:
    put:
      tags: [ews]
      summary: 預警開關
      operationId: update-warning-setting-enable
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /v2/warning/setting/{ID}/condition/enable:
    put:
      tags: [ews]
      summary: 預警開關
      operationId: update-warning-setting-condition-enable
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                index:
                  type: integer
                enable:
                  type: boolean
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '401':
          description: permission denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        '500':
          description: 伺服器發生錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
components:
  schemas:
    ErrorsResponse:
      type: object
      properties:
        error:
          type: string
        service:
          type: string
        status:
          type: integer
          format: int32
      required:
        - error
        - status
        - service
      example:
        error: "this is error message"
        status: 400
        service: "scada"
    logical:
      type: object
      properties:
        op:
          type: string
          enum: ['=', '!=', '>', '<', '>=', '<=', '&=']
        value:
          type: number
      required:
        - op
        - value
    frequency:
      type: object
      properties:
        minutes:
          type: integer
        times:
          type: integer
      required:
        - minutes
        - times
    timeRange:
      type: object
      properties:
        start:
          type: string
          example: "00:00:00Z"
        end:
          type: string
          example: "23:59:59Z"
    condition:
      type: object
      properties:
        enable:
          type: boolean
        time_range:
          $ref: '#/components/schemas/timeRange'
        week_days:
          type: array
          items:
            type: integer
        frequency:
          $ref: '#/components/schemas/frequency' 
        logicals:
          type: array
          items:
            $ref: '#/components/schemas/logical'
      required:
        - enable
        - time_range
        - week_days
        - frequency
        - logicals
    applyFields:
      properties:
        field:
          type: string
        name:
          type: string
      required:
        - field
        - name
    CreateWarning:
      type: object
      properties:
        name:
          type: string
        enable:
          type: boolean
        unit: 
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/condition'
        apply_fields:
          type: array
          items:
            $ref: '#/components/schemas/applyFields'   
      required:
        - name
        - enable
        - unit
        - conditions
        - apply_fields
    GetWarningSettingList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          enable:
            type: boolean
          unit: 
            type: string
          conditions:
            type: array
            items:
              $ref: '#/components/schemas/condition'
        required:
          - id
          - name
          - enable
          - unit
          - conditions
    GetWarningSettingDetail:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        unit:
          type: string
        enable:
          type: boolean
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/condition'
        apply_fields:
          type: array
          items:
            $ref: '#/components/schemas/applyFields'
      required:
        - id
        - name
        - enable
        - unit
        - conditions
        - apply_fields
  examples:
    CreateWarning:
      value:
        name: Temperature Sensor
        enable: true
        unit: ˚C
        conditions:
        - enable: true
          time_range:
            start: "08:00:00Z"
            end: "17:00:00Z"
          week_days:
            - 0
            - 1
            - 2
            - 3
            - 4
          frequency:
            minutes: 15
            times: 0
          logicals:
            - op: ">"
              value: 25
        apply_fields:
          - field: temperature
            name: Temperature Sensor
    GetWarningSettingList:
      value:
        - id: fb2c4869-5238-4ea5-994c-677666927ea1
          name: Temperature Sensor
          enable: true
          unit: ˚C
          conditions:
          - enable: true
            time_range:
              start: "08:00:00Z"
              end: "17:00:00Z"
            week_days:
              - 0
              - 1
              - 2
              - 3
              - 4
            frequency:
              minutes: 15
              times: 0
            logicals:
              - op: ">"
                value: 25
          apply_fields:
          - field: temperature
            name: Temperature Sensor
    GetWarningSettingDetail:
      value:
        - id: fb2c4869-5238-4ea5-994c-677666927ea1
          name: Temperature Sensor
          enable: true
          unit: ˚C
          conditions:
            - enable: true
              time_range:
                start: "08:00:00Z"
                end: "17:00:00Z"
              week_days:
                - 0
                - 1
                - 2
                - 3
                - 4
              frequency:
                minutes: 15
                times: 0
              logicals:
                - op: ">"
                  value: 25
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
  - url: http://rubase-alert-svc:9080
    description: Rulebase_Alert_Service